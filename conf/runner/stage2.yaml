# Stage 2 runner configuration (Hydra)

defaults:
  # Reuse Stage 1 PyTorch representative profiler presets under torch_profiler
  - /profiling/torch@torch_profiler: torch-profiler.min
  # External profiler presets (Nsight Systems / Nsight Compute)
  - /profiling/nsys@nsys: nsys.default
  - /profiling/ncu@ncu: ncu.default
  - _self_

run:
  # deep | light
  mode: deep
  # Number of top kernels (by total time) to select for Nsight Compute
  top_n_kernels: 30
  # Stage 1 repeats (images to process); set to dataset subset size to iterate all samples
  stage1_repeats: 1
  # Optional dataset subset filelist to pass into Stage 1 (relative to repo root unless absolute)
  dataset_subset_filelist: null

artifacts:
  # Where Stage 2 artifacts are written
  stage2_dir: ${hydra:runtime.cwd}/tmp/stage2/${now:%Y%m%d-%H%M%S}

hydra:
  run:
    dir: ${artifacts.stage2_dir}
  output_subdir: null
  job:
    chdir: true

# Interop with Stage 1 runner (refactor compatibility)
# If the Stage 2 runner delegates the workload to the Stage 1 runner,
# pass this override so static analysis is disabled during Nsight capture.
stage1_runner:
  disable_static: true   # translates to Hydra override: runners=stage1.no-static
  device: cuda:0         # device override to pass into Stage 1 runner

# Profiler gating switches
# When false, do not rely on NVTX to gate capture/filtering.
nsys:
  gating_nvtx: true
ncu:
  gating_nvtx: true
